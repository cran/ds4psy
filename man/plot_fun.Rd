% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_fun.R
\name{plot_fun}
\alias{plot_fun}
\title{A function to plot some plot.}
\usage{
plot_fun(a = NA, b = TRUE, c = TRUE, d = 1, e = FALSE,
  f = FALSE, g = FALSE, c1 = c(rev(pal_seeblau), "white", pal_grau,
  "black", Bordeaux), c2 = "black")
}
\arguments{
\item{a}{A (natural) number. 
Default: \code{a = NA}.}

\item{b}{A Boolean value. 
Default: \code{b = TRUE}.}

\item{c}{A Boolean value. 
Default: \code{c = TRUE}.}

\item{d}{A (decimal) number. 
Default: \code{d = 1.0}.}

\item{e}{A Boolean value. 
Default: \code{e = FALSE}.}

\item{f}{A Boolean value. 
Default: \code{f = FALSE}.}

\item{g}{A Boolean value. 
Default: \code{g = FALSE}.}

\item{c1}{A color palette (e.g., as a vector). 
Default: \code{c1 = c(rev(pal_seeblau), "white", pal_grau, "black", Bordeaux)}. 
Note: Using colors of the \code{unikn} package by default.}

\item{c2}{A color (e.g., as a character). 
Default: \code{c2 = "black"}.}
}
\description{
\code{plot_fun} is a function that uses parameters to plot a plot.
}
\details{
\code{plot_fun} is deliberately kept cryptic and obscure to illustrate 
how function parameters can be explored (and why transparent variable 
names are essential for understanding and using a function).
}
\examples{
# Basics: 
plot_fun()

# Exploring options: 
plot_fun(a = 3, b = FALSE, e = TRUE)
plot_fun(a = 4, f = TRUE, g = TRUE, c1 = c("steelblue", "white", "firebrick"))

}
\seealso{
\code{\link{plot_fn}} for a related function; 
\code{\link{pal_ds4psy}} for color palette.

Other plot functions: \code{\link{plot_fn}},
  \code{\link{plot_n}}, \code{\link{plot_tiles}},
  \code{\link{theme_ds4psy}}
}
\concept{plot functions}
